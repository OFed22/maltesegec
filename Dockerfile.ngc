# Use NVIDIA's optimized TF 1.15 container
FROM nvcr.io/nvidia/tensorflow:19.12-tf1-py3

# Set environment variables for memory growth
ENV TF_FORCE_GPU_ALLOW_GROWTH=true
ENV TF_GPU_ALLOCATOR=cuda_malloc_async
ENV CUDA_CACHE_DISABLE=1

# Upgrade pip
RUN pip install --upgrade pip

# Install dependencies with specific versions
RUN pip install --no-cache-dir \
    protobuf==3.19.6 \
    numpy==1.18.5

# Install tensorflow-probability and tensor2tensor
RUN pip install --no-cache-dir --no-deps tensorflow-probability==0.8.0
RUN pip install --no-cache-dir --no-deps tensor2tensor==1.12.0

# Install all tensor2tensor dependencies
RUN pip install --no-cache-dir \
    mesh-tensorflow==0.0.5 \
    six==1.12.0 \
    absl-py==0.7.1 \
    gin-config==0.1.4 \
    google-api-python-client==1.12.8 \
    oauth2client==4.1.3 \
    tensorflow-datasets==1.0.2 \
    tensorflow-metadata==0.13.0 \
    cloudpickle==1.3.0 \
    mock==3.0.5 \
    Pillow==6.2.2 \
    scipy==1.2.2 \
    gym==0.17.3 --no-deps \
    pyglet==1.5.0 \
    sympy==1.4 \
    requests \
    urllib3 \
    bz2file \
    mpmath \
    httplib2 \
    uritemplate \
    google-api-core \
    dill \
    promise \
    future \
    charset-normalizer \
    certifi \
    idna \
    google.auth

# Setup volumes
VOLUME /app/malteseGEC
VOLUME /home/fed/malteseGEC

# Create symbolic links
RUN ln -sf /app/malteseGEC/training /home/fed/malteseGEC/training
RUN ln -sf /app/malteseGEC/data /home/fed/malteseGEC/data

# Set Python path
ENV PYTHONPATH="/app:/app/malteseGEC:/app/malteseGEC/training"

# Fix the video model import issue
RUN sed -i 's/from tensor2tensor.models.video import savp/#from tensor2tensor.models.video import savp/g' /usr/local/lib/python3.6/dist-packages/tensor2tensor/models/__init__.py

WORKDIR /app
ENTRYPOINT ["/bin/bash"]